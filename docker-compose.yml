version: '3'

services:
  api-server:
    build:
      context: ./api-server
      dockerfile: Dockerfile
    container_name: api-server
    restart: unless-stopped
    depends_on:
      - postgresql
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_ELASTICSEARCH_URIS=${SPRING_ELASTICSEARCH_URIS}
    volumes:
      - ./api-server/MessageSync_last_id.txt:/app/MessageSync_last_id.txt
      - ./icon:/app/icon

  msg-scraper:
    build:
      context: ./msg-scraper
      dockerfile: Dockerfile
    container_name: msg-scraper
    restart: unless-stopped
    depends_on:
      - postgresql
    environment:
      - PHONE=${PHONE}
      - API_HASH=${API_HASH}
      - API_ID=${API_ID}
      - PG_DATABASE=${PG_DATABASE}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - USE_PROXY=${USE_PROXY}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PORT=${PROXY_PORT}
      - PROXY_HOST=${PROXY_HOST}

  web-app:
    build:
      context: ./web-app
      dockerfile: Dockerfile
    container_name: web-app
    restart: unless-stopped
    depends_on:
      - api-server
    volumes:
      - ./icon:/var/www/tgscan.xyz/images:ro
    ports:
      - "80:80"

  postgresql:
    image: postgres:14.5
    container_name: postgresql
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    volumes:
      - postgresql:/var/lib/postgresql/data/
      - ./api-server/src/main/resources/sql/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  elasticsearch:
    image: elasticsearch:7.17.6
    container_name: elasticsearch
    restart: unless-stopped
    environment:
      - "cluster.name=elasticsearch"
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms2G -Xmx2G"
      - bootstrap.memory_lock=true
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data

  kibana:
    image: kibana:7.17.6
    container_name: kibana
    restart: unless-stopped
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"

volumes:
  postgresql:
  elasticsearch:
